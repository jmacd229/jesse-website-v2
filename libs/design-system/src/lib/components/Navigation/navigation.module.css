:root {
  --nav-item-hover-color: var(--primary-500);
}

:global(html.dark) {
  --nav-item-hover-color: var(--primary-800);
}

/* Reserves space in the layout for either nav type */
.nav-anchor {
  /* Vertical Navigation */
  @media (min-width: 1500px) {
    width: 6rem;
  }
  /* Horizontal Navigation */
  @media (max-width: 1499px) {
    height: 4rem;
  }
}

.root-nav-container {
  position: fixed;
  display: flex;
  z-index: var(--nav-z-index);
  padding: 1rem;
  border: 1px solid transparent;
  border-radius: var(--radius-2);

  transition: box-shadow var(--animation), background-color var(--animation),
    width var(--animation), padding var(--animation), border var(--animation);

  /* Vertical Navigation */
  @media (min-width: 1500px) {
    flex-direction: column;
    height: calc(100svh - 4rem);
    top: 1rem;
    padding-left: 0;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;

    /* Used for floating-nav style */
    --max-elevation: var(--elevation-3);

    &:hover,
    &:focus-within {
      border-color: var(--neutral-300);
      background: var(--element-background);
      animation: floating-nav 4s linear infinite;
    }
  }

  /* Horizontal Navigation */
  @media (max-width: 1499px) {
    flex-direction: row;
    height: unset;
    width: 100%;
    left: 0;
    padding: 0.25rem 0;
    justify-content: center;
    border-top-left-radius: 0;
    border-top-right-radius: 0;
    border-color: var(--neutral-300);
    background: var(--element-background);
    animation: floating-nav 4s linear infinite;

    /* Used for floating-nav style */
    --max-elevation: var(--elevation-2);

    .nav-item {
      flex-direction: column;
      align-items: center;
      width: 6rem;
      gap: 0.25rem;
      padding: 0 var(--nav-item-horizontal-padding);

      .icon-text {
        max-height: 0;
      }

      /* Horizontal nav items expand in width and height at the same time. Whereas vertical only expands horizontally*/
      &:hover .icon-text,
      &:focus .icon-text {
        max-height: 200px;
      }

      &::after {
        bottom: 0;
      }
    }
  }
}

:global(html.no-motion) {
  @media (min-width: 1500px) {
    .nav-anchor {
      width: 16rem;
    }
  }
  .root-nav-container {
    border-color: var(--neutral-300);
    background: var(--element-background);
    box-shadow: var(--elevation-1);
  }

  .nav-item {
    .icon-text {
      max-height: 200px;
      max-width: 200px;
    }
    &::after {
      width: 0;
    }
  }
}

/* The nav group is only used to supply an a11y role */
.nav-group {
  display: contents;
}

.nav-item {
  --nav-item-horizontal-padding: 1rem;
  --nav-item-vertical-padding: 1rem;
  position: relative;
  display: flex;
  padding: var(--nav-item-vertical-padding) var(--nav-item-horizontal-padding);
  gap: 0.5rem;
  align-items: flex-end;
  overflow: hidden;
  font-size: 1rem;

  svg {
    flex-shrink: 0;
    transition: color var(--animation);
  }

  .icon-text {
    max-width: 0;
    white-space: nowrap;
    overflow: hidden;
    font-weight: 500;
    transition: max-width 0.5s ease-in, max-height 0.5s ease-in;

    @media (pointer: coarse) {
      max-width: 200px !important;
      max-height: 200px !important;
    }
  }

  /* Pseudo element used for underline animation*/
  &::after {
    position: absolute;
    display: block;
    content: '';
    width: 0%;
    height: 1px;
    background-color: var(--primary-400);
    bottom: 0.5rem;

    transition: width 0.5s ease-in;
  }

  &:hover,
  &:focus {
    .icon-text {
      max-width: 200px;
    }

    &::after {
      width: calc(100% - (var(--nav-item-horizontal-padding) * 2));
    }

    svg {
      animation: rotate 350ms ease-out 1;
      color: var(--nav-item-hover-color);
    }
  }
}

.skip-to-content {
  --skip-content-line-height: 1rem;

  max-width: unset;
  position: fixed;
  overflow: visible;
  z-index: var(--skip-to-content-index);
  background-color: var(--element-background);
  border-radius: var(--radius-2);
  font-size: 1rem;
  line-height: 1rem;
  top: calc(
    (var(--skip-content-line-height) + (var(--nav-item-vertical-padding) * 2)) *
      -1
  );
  transition: top 100ms ease-in-out;

  &:hover,
  &:focus {
    top: 0;
    color: var(--link-hover-color);
  }
}

@keyframes rotate {
  from {
    transform: rotateY(20deg);
  }
  to {
    transform: rotateY(180deg);
  }
}

@keyframes floating-nav {
  0% {
    box-shadow: var(--min-elevation, var(--elevation-1));
  }
  50% {
    box-shadow: var(--max-elevation, var(--elevation-2));
  }
  100% {
    box-shadow: var(--min-elevation, var(--elevation-1));
  }
}
